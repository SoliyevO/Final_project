#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <DHT.h>

// LCD1602 I2C manzili odatda 0x27 bo'ladi
LiquidCrystal_I2C lcd(0x27, 16, 2);

// DHT22 sensor
#define DHTPIN 2
#define DHTTYPE DHT22
DHT dht(DHTPIN, DHTTYPE);

void setup() {
  lcd.begin(16,2);
  lcd.backlight();
  dht.begin();
}

void loop() {
  float temp = dht.readTemperature();
  float hum = dht.readHumidity();

  lcd.clear();
  
  if (isnan(temp) || isnan(hum)) {
    lcd.setCursor(0, 0);
    lcd.print("Sensor xatosi!");
    delay(2000);
    return;
  }

  lcd.setCursor(0, 0);
  lcd.print("T: ");
  lcd.print(temp);
  lcd.print((char)223); // Gradus belgisi
  lcd.print("C");

  lcd.setCursor(0, 1);
  lcd.print("H: ");
  lcd.print(hum);
  lcd.print("%");

  delay(2000); // ma'lumotni 2 soniyada yangilash

  // Harorat shartlarini tekshirish
  if (temp > 30) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("YUQORI HARORAT");
    delay(2000);
  } else if (temp < 10) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("PAST HARORAT");
    delay(2000);
  }
}

------------------------------------------------------------------------------------------------------------------------

1.3 #include <WiFi.h>
#include <PubSubClient.h>

// WiFi sozlamalari
const char* ssid = "Wokwi-GUEST";
const char* password = "";

// MQTT broker manzili
const char* mqtt_server = "broker.hivemq.com";

// PIR sensor GPIO pini
const int pirPin = 27;

// MQTT ob'ektlari
WiFiClient espClient;
PubSubClient client(espClient);

// O'zgaruvchilar
int lastPirState = LOW;

void setup_wifi() {
  delay(10);
  Serial.begin(9600);
  Serial.println();
  Serial.print("Wi-Fi ga ulanmoqda: ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("\nWiFiga ulandi");
  Serial.print("IP manzil: ");
  Serial.println(WiFi.localIP());
}

// MQTT brokerga qayta ulanish
void reconnect() {
  while (!client.connected()) {
    Serial.print("MQTT brokerga ulanmoqda...");
    String clientId = "ESP32Client-" + String(random(0xffff), HEX);
    if (client.connect(clientId.c_str())) {
      Serial.println("MQTT brokerga ulandi");
    } else {
      Serial.print(" Xatolik, kod: ");
      Serial.print(client.state());
      delay(5000);
    }
  }
}

void setup() {
  pinMode(pirPin, INPUT);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  int currentPirState = digitalRead(pirPin);
  if (currentPirState != lastPirState) {
    if (currentPirState == HIGH) {
      Serial.println("Yuborildi -> Harakat mavjud");
      client.publish("iot/pir", "Harakat mavjud");
    } else {
      Serial.println("Yuborildi -> Harakat mavjud emas");
      client.publish("iot/pir", "Harakat mavjud emas");
    }
    lastPirState = currentPirState;
  }
}


